#seal_b Miten hylkeiden esiintyminen vaikuttaa elinkeinoosi?
#seal_c Hylkeiden esiintymisen tulisi olla luonnossa
#
#
#
#
#
#
rm(list=ls())
data1<-read.table(sep=";", file="U:/Documents/4. ES modelling with Bayes/Questionnaire_data_r_15102018.csv",header=T)
summary(data1)
data_recreation<-data1[,c("clarity_a","fucus_a","seal_a","cormorant_a","pikeperch_a",
"herring_a", "perch_a","cyano_a","alien_a","fila_a")]
recreation_value<-matrix(1:60, nrow=6, dimnames = list(c("Contributes a lot","Contributes somewhat","Neutral","Harms somewhat","Harms a lot","Cannot say"),
c("Water_clarity", "Fucus_abundance","Seal_abundance",
"Cormorant_abundance", "Pikeperch_abundance", "Herring_abundance",
"Perch_abundance", "Cyanbo_blooms", "Alien_species_abundance",
"Filamentous_algae")))
recreation_value
View(recreation_value)
data_recreation<-data1[,c("clarity_a","fucus_a","seal_a","cormorant_a","pikeperch_a",
"herring_a", "perch_a","cyano_a","alien_a","fila_a")]
recreation_value<-matrix(1:60, nrow=6, dimnames = list(c("Contributes a lot","Contributes somewhat","Neutral","Harms somewhat","Harms a lot","Cannot say"),
c("Water_clarity", "Fucus_abundance","Seal_abundance",
"Cormorant_abundance", "Pikeperch_abundance", "Herring_abundance",
"Perch_abundance", "Cyanbo_blooms", "Alien_species_abundance",
"Filamentous_algae")))
recreation_value
for (i in 1:10){
for (j in 1:6)
recreation_value[j,i]<-sum(data_recreation[,i]==j)
}
write.table(recreation_value, sep=",", file="//kk11/E1002220$/Documents/4. ES modelling with Bayes/Kyselyn tuloksia/Recreation value.csv", row.names=F)
write.table(recreation_value, sep=";", file="//kk11/E1002220$/Documents/4. ES modelling with Bayes/Kyselyn tuloksia/Recreation value.csv", row.names=F)
#########
####### 2018 Questionnaire data analysis ######
# Question 1
#clarity_a Miten veden kirkkaus vaikuttaa virkistäytymiseesi
#clarity_b Miten veden kirkkaus vaikuttaa elinkeinoosi?
#clarity_c Veden kirkkauden tulisi olla luonnossa
#seal_a Miten hylkeiden esiintyminen vaikuttaa virkistäytymiseesi?
#seal_b Miten hylkeiden esiintyminen vaikuttaa elinkeinoosi?
#seal_c Hylkeiden esiintymisen tulisi olla luonnossa
#
#
#
#
#
#
rm(list=ls())
data1<-read.table(sep=";", file="U:/Documents/4. ES modelling with Bayes/Questionnaire_data_r_tourism.csv",header=T)
summary(data1)
data_recreation<-data1[,c("clarity_a","fucus_a","seal_a","cormorant_a","pikeperch_a",
"herring_a", "perch_a","cyano_a","alien_a","fila_a")]
recreation_value<-matrix(1:60, nrow=6, dimnames = list(c("Contributes a lot","Contributes somewhat","Neutral","Harms somewhat","Harms a lot","Cannot say"),
c("Water_clarity", "Fucus_abundance","Seal_abundance",
"Cormorant_abundance", "Pikeperch_abundance", "Herring_abundance",
"Perch_abundance", "Cyanbo_blooms", "Alien_species_abundance",
"Filamentous_algae")))
recreation_value
for (i in 1:10){
for (j in 1:6)
recreation_value[j,i]<-sum(data_recreation[,i]==j)
}
write.table(recreation_value, sep=";", file="//kk11/E1002220$/Documents/4. ES modelling with Bayes/Kyselyn tuloksia/Recreation value_tourism.csv", row.names=F)
data_livelihood<-data1[,c("clarity_b","fucus_b","seal_b","cormorant_b","pikeperch_b",
"herring_b", "perch_b","cyano_b","alien_b","fila_b")]
livelihood_value<-matrix(1:60, nrow=6, dimnames = list(c("Contributes a lot","Contributes somewhat","Neutral","Harms somewhat","Harms a lot","Cannot say"),
c("Water_clarity", "Fucus_abundance","Seal_abundance",
"Cormorant_abundance", "Pikeperch_abundance", "Herring_abundance",
"Perch_abundance", "Cyanbo_blooms", "Alien_species_abundance",
"Filamentous_algae")))
livelihood_value
for (i in 1:10){
for (j in 1:6)
livelihood_value[j,i]<-sum(data_livelihood[,i]==j)
}
write.table(livelihood_value, sep=";", file="//kk11/E1002220$/Documents/4. ES modelling with Bayes/Kyselyn tuloksia/Livelihood value.csv", row.names=F)
rm(list=ls())
data1<-read.table(sep=";", file="U:/Documents/4. ES modelling with Bayes/Questionnaire_data_r_15102018.csv",header=T)
summary(data1)
######## lasketaan kuinka moni vastannut että luonnon osat haittaa/edistää elinkeinoa
data_livelihood<-data1[,c("clarity_b","fucus_b","seal_b","cormorant_b","pikeperch_b",
"herring_b", "perch_b","cyano_b","alien_b","fila_b")]
livelihood_value<-matrix(1:60, nrow=6, dimnames = list(c("Contributes a lot","Contributes somewhat","Neutral","Harms somewhat","Harms a lot","Cannot say"),
c("Water_clarity", "Fucus_abundance","Seal_abundance",
"Cormorant_abundance", "Pikeperch_abundance", "Herring_abundance",
"Perch_abundance", "Cyanbo_blooms", "Alien_species_abundance",
"Filamentous_algae")))
livelihood_value
for (i in 1:10){
for (j in 1:6)
livelihood_value[j,i]<-sum(data_livelihood[,i]==j)
}
write.table(livelihood_value, sep=";", file="//kk11/E1002220$/Documents/4. ES modelling with Bayes/Kyselyn tuloksia/Livelihood value.csv", row.names=F)
rm(list=ls())
data1<-read.table(sep=";", file="U:/Documents/4. ES modelling with Bayes/Questionnaire_data_r_15102018.csv",header=T)
summary(data1)
######### lasketaan kuinka moni vastannut että luonnon osat haittaa/edistää elinkeinoa
data_livelihood<-data1[,c("clarity_b","fucus_b","seal_b","cormorant_b","pikeperch_b",
"herring_b", "perch_b","cyano_b","alien_b","fila_b")]
livelihood_value<-matrix(1:60, nrow=6, dimnames = list(c("Contributes a lot","Contributes somewhat","Neutral","Harms somewhat","Harms a lot","Cannot say"),
c("Water_clarity", "Fucus_abundance","Seal_abundance",
"Cormorant_abundance", "Pikeperch_abundance", "Herring_abundance",
"Perch_abundance", "Cyanbo_blooms", "Alien_species_abundance",
"Filamentous_algae")))
livelihood_value
for (i in 1:10){
for (j in 1:6)
livelihood_value[j,i]<-sum(data_livelihood[,i]==j)
}
write.table(livelihood_value, sep=";", file="//kk11/E1002220$/Documents/4. ES modelling with Bayes/Kyselyn tuloksia/Livelihood value.csv", row.names=F)
install.packages("rmarkdown")
install.packages("rmarkdown")
Get Started
install.packages("rmarkdown")
library(rmarkdown)
---
title: "IODS course project"
author: Susanna Jernberg
output:
html_document:
theme: cosmo
toc: true
toc_depth: 2
fig_caption: true
fig_width: 6
fig_height: 4
code_folding: hide
---
***
```{r child = "chapter1.Rmd"}
```
***
```{r child = "chapter2.Rmd"}
```
***
---
title: "IODS course project"
author: "Susanna Jernberg""
output:
html_document:
theme: cosmo
toc: true
toc_depth: 2
fig_caption: true
fig_width: 6
fig_height: 4
code_folding: hide
---
***
```{r child = "chapter1.Rmd"}
```
***
```{r child = "chapter2.Rmd"}
```
***
?write.csv
library(rmarkdown)
alc<-read.csv(file="D:/Users/E1002220/Opinnot/Data science/IODS-project/data/alc_data.csv", sep="\t")
library(dplyr)
glimpse(alc)
gather(alc) %>%ggplot(aes(value), col=sex)+facet_wrap("key", scales="free")+geom_bar()
alc%>% group_by(sex, high_use)%>% summarise(count = n(), mean_grade=mean(G3))
library(tidyr)
library(ggplot2)
gather(alc) %>%ggplot(aes(value), col=sex)+facet_wrap("key", scales="free")+geom_bar()
alc%>% group_by(sex, high_use)%>% summarise(count = n(), mean_grade=mean(G3))
g1<-ggplot(alc, aes(x=high_use, y=G3, col=sex))
g1 + geom_boxplot() + ylab("grade")+ggtitle("Student grades by alcohol consumption and sex")
g2<-ggplot(alc, aes(x=high_use, y=absences, col=sex))
g2 + geom_boxplot() + ylab("absences")+ggtitle("Student absences by alcohol consumption and sex")
g3<-ggplot(alc, aes(x=high_use, y=activities, col=sex))
g3 + geom_boxplot() + ylab("failures")+ggtitle("Student failures by alcohol consumption and sex")
g1<-ggplot(alc, aes(x=G3, col=sex))
g1 + geom_bar()
g2<-ggplot(alc, aes(x=absences, col=sex))
g2 + geom_bar()
g3<-ggplot(alc, aes(x=failures, col=sex))
g3 + geom_bar() +ggtitle("Distribution by failures and sex")
```
g1
g1<-ggplot(alc, aes(x=high_use, y=G3, col=sex))
g1 + geom_boxplot() + ylab("grade")+ggtitle("Student grades by alcohol consumption and sex")
g1
g1<-ggplot(alc, aes(x=high_use, y=G3, col=sex))
g1 + geom_boxplot() + ylab("grade")+ggtitle("Student grades by alcohol consumption and sex")
g1
Here I fit the model with chosen variables and show the summary
```{r}
model<-glm(high_use ~ absences + failures + sex + G3, data=alc)
summary(model)
OR<-coef(model)%>%exp
OR
CI<-confint(OR)%>%exp
CI < -confint(OR) %>%exp
CI<-confint(OR) %>%exp
CI<-confint(OR) %>%exp()
CI<-confint(OR)%>%exp()
?confint
install.packages("MASS")
library(mass)
library(MASS)
CI<-confint.glm(OR)%>%exp()
CI<-confint(OR)%>%exp()
CI<-exp(confint(OR))
model<-glm(high_use ~ absences + failures + sex + G3, data=alc, family="binomial")
summary(model)
OR<-coef(model)%>%exp
CI<-exp(confint(OR))
OR<- coef(model) %>%exp
CI <- confint(OR) %>% exp
is.atomic(alc)
CI <- confint("OR") %>% exp
install.packages("tidyverse")
install.packages("corrplot")
library(MASS)
library(tidyverse)
library(corrplot)
data("Boston")
dim(Boston)
str(Boston)
summary(Boston)
cor_matrix<-cor(Boston)
cor_matrix%>%round(digits=2)
corrplot(cor_matrix, method="circle", type="upper", cl.bos="b", tl.pos="d", tl.cex=0.6)
boston_scaled<-scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_sclaed<-as.data.frame(boston_scaled)
class(boston_scaled)
boston_sclaed<-as.data.frame(boston_scaled, make.names=TRUE)
class(boston_scaled)
boston_scaled<-as.data.frame(boston_scaled)
class(boston_scaled)
library(MASS)
library(tidyverse)
library(corrplot)
data("Boston")
dim(Boston)
str(Boston)
summary(Boston)
pairs(Boston)
cor_matrix<-cor(Boston)
cor_matrix%>%round(digits=2)
corrplot(cor_matrix, method="circle", type="upper", cl.bos="b", tl.pos="d", tl.cex=0.6)
boston_scaled<-scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled<-as.data.frame(boston_scaled)
class(boston_scaled)
summary(Boston$crim)
bins<-quantile(boston_scaled$crim) #create a quantile vector of the crime in the boston_scaled
bins
classes<-c("low", "med_low", "med_high", "high")
classes
crime<-cut(boston_scaled$crim, breaks=bins, include.lowest = TRUE, labels=classes)
table(crime)
boston_scaled<-dplyr::select(boston_scaled, -crim)
boston_scaled<-data.frame(boston_scaled, crime)
n<-nrow(boston_scaled)
ind<-sample(n, size= n*0.8) ##choose randomly 80 % of the rows
train<-boston_scaled[ind, ]
test<-boston_scaled[-ind,]
correct_classes<-test$crime
test<-dplyr::select(test, -crime) # remove the crime variable from test data
lda.fit<-lda(crime~., data=train)
lda.fit
lda.arrows<-function(x, myscale=1, arrow_heads=0.1, color="red", tex=0.75, choices=c(1,2)){
heads<-coef(x)
arrows(x0=0, y=0,
x1=myscale*heads[,choices[1]],
y1=myscale*heads[,choices[2]], col=color, length=arrow_heads)
text(myscale*heads[,choices], labels=row.names(heads), cex=tex, col=color, pos=3)
} ## function for lda biplot arrows
classes<-as.numeric(train$crime)
plot(lda.fit, dimen=2, col=classes, pch=classes)
plot(lda.fit, dimen=2, col=classes, pch=classes)
lda.arrows(lda.fit, myscale=3)
lda.pred<-predict(lda.fit, newata=test)
table(correct_classes, predicted=lda.pred$class)
dist_eu<-dist(Boston)
summary(dist_eu)
km<-kmeans(Boston, centers=3)
pairs(Boston[6:10], col=km$cluster)
set.seed(123)
k_max<-10
twcss<-sapply(1:k_max, function(k){kmeans(Boston, k)$tot.withinss})
qplot(x=1:k_max, y=twcss, geom="line")
km<-kmeans(Boston, centers=2)
pairs(Boston, col=km$cluster)
table(correct=correct_classes, predicted=lda.pred$class)
###25.11.2018
## Susanna Jernberg
### This is data wrangling for next weeks dimensionality reduction techniques
### read two datasets "Human development" and "Gender inequality" in
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
#check the dimensions, structure and summaries of the variables of the both datasets
dim(hd)
str(hd)
summary(hd)
dim(gii)
str(gii)
summary(gii)
colnames(hd)<-c("rank", "country", "HDI", "expected_age", "years_edu", "mean_years_edu","GNI","GNI_minus_rank")
summary(hd)
colnames(gii)<-c("ranks","GII","mortality","birth_rate","parlament_representation","second_edu_f","second_edu_m","work_rate_f","work_rate_m")
summary(gii)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
colnames(gii)<-c("ranks","country","GII","mortality","birth_rate","parlament_representation","second_edu_f","second_edu_m","work_rate_f","work_rate_m")
summary(gii)
library("MASS")
data(Boston)
library(MASS)
data("Boston")
pair(Boston)
library(dplyr)
pair(Boston)
pairs(Boston)
setwd("D:/Users/E1002220/Opinnot/Data science/IODS-project")
human<-read.csv("create_human",sep=",")
### read dataset
human<-read.csv("create_human.csv",sep=",")
setwd("D:/Users/E1002220/Opinnot/Data science/IODS-project/data")
### read dataset
human<-read.csv("create_human.csv",sep=",")
#check the dimensions, structure and summaries
dim(human)
str(human)
summary(human)
### read dataset
human<-read.csv("create_human.csv",sep=";")
#check the dimensions, structure and summaries
dim(human)
### read dataset
human<-read.csv("create_human.csv",sep=" ")
#check the dimensions, structure and summaries
dim(human)
### read dataset
human<-read.csv("create_human.csv",sep="t/ ")
### read dataset
human<-read.csv("create_human.csv",sep=",")
#check the dimensions, structure and summaries
dim(human)
### read dataset
human<-read.table("create_human.csv",sep=",")
#check the dimensions, structure and summaries
dim(human)
### read dataset
human<-read.table("create_human.csv",sep=",")
#check the dimensions, structure and summaries
dim(human)
str(human)
### read dataset
human<-read.table("create_human.csv",sep="\")
#check the dimensions, structure and summaries
dim(human)
str(human)
summary(human)
dim(gii)
str(gii)
summary(gii)
### change the column names to shorter ones
colnames(hd)<-c("rank", "country", "HDI", "expected_age", "years_edu", "mean_years_edu","GNI","GNI_minus_rank")
summary(hd)
colnames(gii)<-c("ranks","country","GII","mortality","birth_rate","parlament_representation","second_edu_f","second_edu_m","work_rate_f","work_rate_m")
summary(gii)
library(dplyr)
# Combine the two datasets by using common columns as identifiers
#first define which columns will be used as identifiers
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus",
"Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
join_by
# then join the columns based on those identifiers and keep only the students in the both datasets
math_por<-inner_join(data_math, data_por, by=join_by, suffix= c(".data_math", ".data_por"))
alc<-select(math_por, one_of(join_by))
## add the missing columns (ones not used in joining the dataset) to the data frame
notjoined_columns<-colnames(data_math)[!colnames(data_math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns){
two_columns<-select(math_por, starts_with(column_name))
first_column<-select(two_columns, 1)[[1]]
if(is.numeric(first_column)){
alc[column_name]<-round(rowMeans(two_columns))
} else {
alc[column_name]<-two_columns[,1]
}
}
# check structure and dimensions of the new dataset
dim(alc)
str(alc)
library(ggplot2)
### read dataset
human<-read.table("create_human.csv",sep="\")
#check the dimensions, structure and summaries
dim(human)
str(human)
summary(human)
dim(gii)
str(gii)
summary(gii)
### change the column names to shorter ones
colnames(hd)<-c("rank", "country", "HDI", "expected_age", "years_edu", "mean_years_edu","GNI","GNI_minus_rank")
summary(hd)
colnames(gii)<-c("ranks","country","GII","mortality","birth_rate","parlament_representation","second_edu_f","second_edu_m","work_rate_f","work_rate_m")
summary(gii)
library(dplyr)
# Combine the two datasets by using common columns as identifiers
#first define which columns will be used as identifiers
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus",
"Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
join_by
# then join the columns based on those identifiers and keep only the students in the both datasets
math_por<-inner_join(data_math, data_por, by=join_by, suffix= c(".data_math", ".data_por"))
alc<-select(math_por, one_of(join_by))
## add the missing columns (ones not used in joining the dataset) to the data frame
notjoined_columns<-colnames(data_math)[!colnames(data_math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns){
two_columns<-select(math_por, starts_with(column_name))
first_column<-select(two_columns, 1)[[1]]
if(is.numeric(first_column)){
alc[column_name]<-round(rowMeans(two_columns))
} else {
alc[column_name]<-two_columns[,1]
}
}
# check structure and dimensions of the new dataset
dim(alc)
str(alc)
library(ggplot2)
### read dataset
human<-read.table("create_human.csv",sep="\")
#check the dimensions, structure and summaries
dim(human)
str(human)
summary(human)
dim(gii)
str(gii)
summary(gii)
### change the column names to shorter ones
colnames(hd)<-c("rank", "country", "HDI", "expected_age", "years_edu", "mean_years_edu","GNI","GNI_minus_rank")
summary(hd)
colnames(gii)<-c("ranks","country","GII","mortality","birth_rate","parlament_representation","second_edu_f","second_edu_m","work_rate_f","work_rate_m")
summary(gii)
library(dplyr)
# Combine the two datasets by using common columns as identifiers
#first define which columns will be used as identifiers
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus",
"Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
join_by
# then join the columns based on those identifiers and keep only the students in the both datasets
math_por<-inner_join(data_math, data_por, by=join_by, suffix= c(".data_math", ".data_por"))
alc<-select(math_por, one_of(join_by))
## add the missing columns (ones not used in joining the dataset) to the data frame
notjoined_columns<-colnames(data_math)[!colnames(data_math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns){
two_columns<-select(math_por, starts_with(column_name))
first_column<-select(two_columns, 1)[[1]]
if(is.numeric(first_column)){
alc[column_name]<-round(rowMeans(two_columns))
} else {
alc[column_name]<-two_columns[,1]
}
}
# check structure and dimensions of the new dataset
dim(alc)
str(alc)
library(ggplot2)
### read dataset
human<-read.table(sep=",",create_human.csv")
#check the dimensions, structure and summaries
dim(human)
str(human)
summary(human)
dim(gii)
str(gii)
summary(gii)
### change the column names to shorter ones
colnames(hd)<-c("rank", "country", "HDI", "expected_age", "years_edu", "mean_years_edu","GNI","GNI_minus_rank")
summary(hd)
colnames(gii)<-c("ranks","country","GII","mortality","birth_rate","parlament_representation","second_edu_f","second_edu_m","work_rate_f","work_rate_m")
summary(gii)
library(dplyr)
# Combine the two datasets by using common columns as identifiers
#first define which columns will be used as identifiers
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus",
"Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
join_by
# then join the columns based on those identifiers and keep only the students in the both datasets
math_por<-inner_join(data_math, data_por, by=join_by, suffix= c(".data_math", ".data_por"))
alc<-select(math_por, one_of(join_by))
## add the missing columns (ones not used in joining the dataset) to the data frame
notjoined_columns<-colnames(data_math)[!colnames(data_math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns){
two_columns<-select(math_por, starts_with(column_name))
first_column<-select(two_columns, 1)[[1]]
if(is.numeric(first_column)){
alc[column_name]<-round(rowMeans(two_columns))
} else {
alc[column_name]<-two_columns[,1]
}
}
# check structure and dimensions of the new dataset
dim(alc)
str(alc)
library(ggplot2)
human<-read.table(sep=",",create_human.csv")
dim(human)
